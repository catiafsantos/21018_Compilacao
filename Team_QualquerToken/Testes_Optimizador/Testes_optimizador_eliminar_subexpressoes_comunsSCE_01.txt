 

int main() {
/* Otimização de Subexpressões Comuns (Common Subexpression Elimination - CSE)*/
    int dados[20]; // Um array de inteiros
    int indice_base = 5;
    int deslocamento = 3;
    int valor_lido;
    int novo_valor = 150;

    printf("Código SEM otimização CSE (conceitual) com arrays:\n");

    // Inicializar alguma posição do array (cálculo 1 do índice)
    // O índice (5 + 3 = 8) é calculado aqui.
    dados[indice_base + deslocamento] = 100;
    printf("Definido dados[%d + %d] = %d\n", indice_base, deslocamento, dados[indice_base + deslocamento]);

    // Ler o valor da mesma posição (cálculo 2 do índice)
    // O índice (5 + 3 = 8) é calculado novamente aqui.
    valor_lido = dados[indice_base + deslocamento];
    printf("Lido valor %d de dados[%d + %d]\n", valor_lido, indice_base, deslocamento);

    // Usar o índice numa condição (cálculo 3 do índice)
    // O índice (5 + 3 = 8) é calculado mais uma vez aqui.
    if (dados[indice_base + deslocamento] < novo_valor) {
        // Modificar o valor (cálculo 4 do índice)
        // O índice (5 + 3 = 8) é calculado pela quarta vez.
        dados[indice_base + deslocamento] = novo_valor;
        printf("Atualizado dados[%d + %d] para %d\n", indice_base, deslocamento, novo_valor);
    }

    // Note que 'indice_base + deslocamento' foi calculado múltiplas vezes.

    return 0;
}